name: dataset_test

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the project
      uses: actions/checkout@v2
        
    - name: Checkout datasets
      uses: actions/checkout@v2
      with:
        repository: MatthieuHernandez/Datasets-for-Machine-Learning
        path: ./build/tests/bin/datasets
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0
      
    - name: Create default profile
      run: conan profile new default --detect
      
    - name: Update profile
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Install dependencies
      run: conan install . -s build_type=${{env.BUILD_TYPE}} --install-folder=${{github.workspace}}/build --build missing

    - name: Configure CMake
      run: CC=gcc-11 CXX=/usr/bin/g++-11 cmake -DCMAKE_BUILD_TYPE=Release -B${{github.workspace}}/build -S${{github.workspace}} -G"Unix Makefiles"

    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build --config Release

    - name: Test
      working-directory: ${{github.workspace}}/build/tests/bin
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./dataset_tests --gtest_also_run_disabled_tests
      
